# i3 Config
# vim: set syntax=sh:

set $mod Mod4

# Colors definitions
####################
	# NUMIX
	#set $bg						#2D2D2D
	#set $bg_accent					#383838
	#set $primary					#D64937
	#set $workspace_active			#D64937
	#set $workspace_inactive		#999999
	#set $container_focused			#EEEEEE
	#set $container_focused_bg		#D64937
	#set $container_unfocused		#EEEEEE
	#set $container_unfocused_bg	#D64937

	#ARC
	set $bg							#2F343F
	set $bg_accent					#404552
	set $primary					#5294E2
	set $workspace_active			#FFFFFF
	set $workspace_inactive			#676E7A
	set $container_focused			#EEEEEE
	set $container_focused_bg		#5294E2
	set $container_unfocused		#666666
	set $container_unfocused_bg		#2F343F

set $borderSize 3

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
font pango:Inconsolata for Powerline 12px
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -nb '$bg' -nf '#eee' -sb '$bg' -sf '$primary' -p '>>'
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+shift+d exec --no-startup-id i3-dmenu-desktop

# Change focus
bindsym $mod+Left 	focus left
bindsym $mod+h		focus left
bindsym $mod+Down 	focus down
bindsym $mod+j		focus down
bindsym $mod+Up 	focus up
bindsym $mod+k		focus up
bindsym $mod+Right 	focus right
bindsym $mod+l		focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+m move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left 	move left
bindsym $mod+Shift+Down 	move down
bindsym $mod+Shift+Up 		move up
bindsym $mod+Shift+Right 	move right

# split in horizontal orientation
bindsym $mod+Shift+h split h

# split in vertical orientation
bindsym $mod+Shift+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+z layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# Toggle sticky window
bindsym $mod+shift+s sticky toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+shift+a focus child

# Workspace definitions
set $ws1 "1:"
set $ws2 "2:"
set $ws8 "8:"
set $ws9 "9:"
set $ws10 "10:"

# switch to workspace
bindsym $mod+ampersand 	workspace $ws1
bindsym $mod+eacute 	workspace $ws2
bindsym $mod+quotedbl 	workspace 3
bindsym $mod+apostrophe workspace 4
bindsym $mod+parenleft 	workspace 5
bindsym $mod+minus 		workspace 6
bindsym $mod+egrave 	workspace 7
bindsym $mod+underscore workspace $ws8
bindsym $mod+ccedilla 	workspace $ws9
bindsym $mod+agrave 	workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+ampersand 	move container to workspace $ws1
bindsym $mod+Shift+eacute 		move container to workspace $ws2
bindsym $mod+Shift+quotedbl 	move container to workspace 3
bindsym $mod+Shift+apostrophe 	move container to workspace 4
bindsym $mod+Shift+5 			move container to workspace 5
bindsym $mod+Shift+minus 		move container to workspace 6
bindsym $mod+Shift+egrave 		move container to workspace 7
bindsym $mod+Shift+underscore 	move container to workspace $ws8
bindsym $mod+Shift+ccedilla 	move container to workspace $ws9
bindsym $mod+Shift+agrave 		move container to workspace $ws10

# next/previous workspace
bindsym Mod1+Tab 		workspace next
bindsym Mod1+Shift+Tab 	workspace prev
bindsym $mod+Tab 		workspace back_and_forth
# Move to urgent workspace
bindsym $mod+x [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Escape		exec ~/scripts/dmenu_exit.sh "$bg" "$primary"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink 	width 10 px or 10 ppt
        bindsym k resize grow 		height 10 px or 10 ppt
        bindsym l resize shrink 	height 10 px or 10 ppt
        bindsym m resize grow 		width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Click to focus
focus_follows_mouse no

bar {
		mode dock
		position top
		workspace_buttons yes
        status_command i3blocks
        strip_workspace_numbers yes
		# status_command ~/.i3/status.sh
		font pango:Cabin, FontAwesome 11px
		workspace_buttons yes

		colors {
                statusline #FF0000
                background $bg
                focused_workspace 	$bg_accent	$bg_accent	$workspace_active
                inactive_workspace 	$bg			$bg			$workspace_inactive
        }
}

# colors
# class							border						backgr.						text
client.focused					$container_focused_bg		$container_focused_bg		$container_focused
client.unfocused				$container_unfocused_bg		$container_unfocused_bg		$container_unfocused

# Assigned Ctrl-Mod-L to lock screen via i3lock-wrapper script
bindsym $mod+control+l exec --no-startup-id xautolock -locknow

# Sound keymaps
#bindsym XF86AudioRaiseVolume 	exec ~/scripts/volumeplus.sh
#bindsym XF86AudioLowerVolume 	exec ~/scripts/volumeminus.sh
bindsym XF86AudioRaiseVolume 	exec "amixer -q set Master 5%+ unmute && pkill -SIGRTMIN+10 i3blocks"
bindsym $mod+Prior			 	exec "amixer -q set Master 5%+ unmute && pkill -SIGRTMIN+10 i3blocks"
bindsym XF86AudioLowerVolume 	exec "amixer -q set Master 5%- unmute && pkill -SIGRTMIN+10 i3blocks"
bindsym $mod+Next			 	exec "amixer -q set Master 5%- unmute && pkill -SIGRTMIN+10 i3blocks"
bindsym XF86AudioMute 			exec "amixer -D pulse set Master toggle && pkill -SIGRTMIN+10 i3blocks"
bindsym XF86AudioMicMute 		exec "amixer -D pulse sset Capture toggle && pkill -SIGRTMIN+10 i3blocks"
bindsym $mod+control+v			exec "terminator -x alsamixer"

# bar toggle, hide or show 
bindsym $mod+b bar mode toggle

# Border controls
bindsym $mod+t border normal $borderSize
bindsym $mod+y border pixel $borderSize
bindsym $mod+u border none
new_window 	pixel $borderSize
new_float 	pixel $borderSize

# Caps lock control
bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks

# scratchpad
exec i3-sensible-terminal --title "scratchpad"
for_window [title="scratchpad"] floating enable;
for_window [title="scratchpad"] floating_minimum_size 100 x 100
for_window [title="scratchpad"] floating_maximum 100 x 100;
for_window [title="scratchpad"] move scratchpad;
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

# Screenshots
bindsym Print 		exec scrot '%d-%m-%Y_%s_$wx$h.png' -e 'mv $f ~/Screenshots/' && notify-send  -u normal -t 4 "Screenshot captured"
bindsym $mod+Print 	exec scrot -u '%d-%m-%Y_%s_$wx$h.png' -e 'mv $f ~/Screenshots/' && notify-send  -u normal -t 4 "Screenshot captured"

# Apps shortcuts
bindsym $mod+c exec chromium
bindsym $mod+shift+Return exec nautilus

# Autopositionning settings
for_window [window_role="browser"]			border none
for_window [window_role="pop-up"] 			floating enable
for_window [window_role="task_dialog"] 		floating enable
for_window [title="/usr/bin/alsamixer"]		floating enable
for_window [title="Telegram Web"]			floating enable
for_window [class="Spotify"]                border none
assign [window_role="browser"] $ws1
assign [title="Telegram Web"]  $ws9
assign [class="Kodi"]          $ws8
assign [class="Spotify"]       $ws10

# Wallchanger shortcut
bindsym $mod+w exec ~/scripts/random_wallpaper.sh

# Startup apps
exec --no-startup-id dunst
exec --no-startup-id unclutter
exec --no-startup-id dropbox start
exec --no-startup-id nm-applet
exec --no-startup-id feh --bg-fill ~/Pictures/totoro.png
exec --no-startup-id xautolock -locker '~/scripts/i3lock-wrapper.sh --logo' -time 10 -notify 30 -notifier "notify-send 'Autolock in 30s' 'Réveille toi, tocard' -u critical -t 15000"
exec --no-startup-id setxkbmap -option caps:escape
exec --no-startup-id syndaemon -i 0.5 -d
exec --no-startup-id synclient tapbutton1=1 # Kali bugfix

# Set volume to 20% at startup
exec "amixer -q set Master 20% unmute && pkill -SIGRTMIN+10 i3blocks"
